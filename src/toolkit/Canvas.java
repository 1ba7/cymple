package cymple.toolkit;

<<<<<<< HEAD:src/toolkit/Canvas.java
/*This is basically Magic.*/
=======
>>>>>>> github/master:src/toolkit/Canvas.java
// The methods the PGraphics and PApplet have in common, autogenerated (<3 Unix)
// javap -public PGraphics PApplet | grep -v static | sort | ruby -ne 'n = gets;while o = n and n = gets;puts n.sub(/\((.*)\)\;/){"(" + $1.split(", ").map{|i|"#{i} #{(1..5).map{(97 + rand(26)).chr}.join}"}.join(", ") + ");"} if n == o;end' | sed -e 's/final //' | xclip -selection c
public interface Canvas extends processing.core.PConstants {
    public boolean displayable();
    public float alpha(int tpxfm);
    public float blue(int awyis);
    public float brightness(int cfniu);
    public float green(int ffpkj);
    public float hue(int brjds);
    public float red(int gijbo);
    public float saturation(int kgmsn);
    public int color(float mtclx);
    public int color(float bzlfc, float zqbnc);
    public int color(float wzuur, float dgbwt, float owala);
    public int color(float ulzes, float sowav, float zoocg, float zzkfs);
    public int color(int grlid);
    public int color(int lnuah, int jdljj);
    public int color(int paidv, int pnoqi, int vcper);
    public int color(int rttam, int uthlt, int hvdrv, int tjrir);
    public float bezierPoint(float hhlew, float gxmoi, float zmfkd, float vbbtx, float egfzp);
    public float bezierTangent(float xzgtz, float uhrdf, float yzhsf, float lfshr, float gdetu);
    public float curvePoint(float wdcrf, float zgqqr, float ponbh, float miutf, float rrymn);
    public float curveTangent(float qfmqw, float afqhz, float ustsb, float hnomz, float wysps);
    public float modelX(float dpytp, float sujjh, float kjyko);
    public float modelY(float pzouw, float olxvw, float snwxf);
    public float modelZ(float efvrz, float gtwwb, float diywf);
    public float screenX(float xumic, float qyqyy);
    public float screenX(float yicik, float iyuom, float horud);
    public float screenY(float ysndo, float keadw);
    public float screenY(float mxqre, float jgvds, float matah);
    public float screenZ(float yamak, float brlma, float iktgt);
    public float textAscent();
    public float textDescent();
    public float textWidth(char mgreo);
    public float textWidth(java.lang.String slnmh);
    public int get(int lryax, int jcgsr);
	public int getWidth();
	public int getHeight();
	public void unmask();
    public int lerpColor(int mdrzu, int buocp, float dopuu);
    public java.lang.Object getCache(java.lang.Object mficj);
    public processing.core.PImage get();
    public processing.core.PImage get(int dfhps, int bnykx, int zuihh, int domnk);
    public processing.core.PMatrix2D getMatrix(processing.core.PMatrix2D xwedy);
    public processing.core.PMatrix3D getMatrix(processing.core.PMatrix3D ioorh);
    public processing.core.PMatrix getMatrix();
    public void ambient(float dtupi);
    public void ambient(float nndov, float ycffz, float urbxy);
    public void ambient(int liubd);
    public void ambientLight(float lygul, float mghwj, float oukxa);
    public void ambientLight(float bvmbu, float nzeza, float iobgp, float mkbfu, float dnruc, float yspcr);
    public void applyMatrix(float qtkoj, float rcvgr, float utwpx, float nmywi, float zuhda, float vpzfz);
    public void applyMatrix(float gbgpe, float tcrqa, float xpwfg, float mvrkp, float lxhda, float lrret, float spvur, float wqcrb, float wmqdz, float zlrhd, float gnrzj, float atxoz, float bmtrq, float yjuqp, float vscox, float aeneu);
    public void applyMatrix(processing.core.PMatrix kftge);
    public void applyMatrix(processing.core.PMatrix2D knmii);
    public void applyMatrix(processing.core.PMatrix3D lkqas);
    public void arc(float mgujs, float dwxgk, float vglds, float jluzh, float sybwc, float oiwbg);
    public void background(float qwgyz);
    public void background(float ruaxq, float smhpg);
    public void background(float whmgl, float bkldx, float kyhmv);
    public void background(float nutgk, float vtkvg, float oqzng, float pyemq);
    public void background(int yndxd);
    public void background(int pffgc, float osaer);
    public void background(processing.core.PImage dspxf);
    public void beginCamera();
    public void beginRaw(processing.core.PGraphics pqncu);
    public void beginShape();
    public void beginShape(int eejtd);
    public void bezierDetail(int dzkfx);
    public void bezier(float rnmdz, float nzhxp, float ldaya, float bxpuy, float psecz, float xredw, float egkmn, float wpppg);
    public void bezier(float xiegb, float qcktu, float thsgo, float cwntm, float vjpxa, float gxras, float uyeyt, float cttpu, float vohak, float chhgk, float bgcaz, float mdlvs);
    public void bezierVertex(float agmhz, float xtphi, float hcdmi, float jfohz, float fefyf, float abppw);
    public void bezierVertex(float tpnzs, float phebo, float smyru, float rxnji, float bdyhg, float jliqq, float yxjtm, float dinxv, float grqog);
    public void blend(int lnjsg, int nxrns, int qimnb, int mdxop, int zjmmd, int zsypb, int toqmo, int khzgr, int yznsa);
    public void blend(processing.core.PImage vjugg, int pvbhc, int vhobw, int mtubt, int czlib, int ozdku, int brqqv, int yswdm, int cuvjt, int exzwf);
    public void box(float tqiaj);
    public void box(float cefdd, float ffsvb, float eyjyt);
    public void breakShape();
    public void camera();
    public void camera(float fveys, float ivyha, float itsbw, float rgowo, float dtnln, float rrozr, float nnnkq, float lugkt, float kbyqs);
    public void colorMode(int ahktp);
    public void colorMode(int ygcxj, float aouqv);
    public void colorMode(int tetrf, float qjejk, float yboau, float szdey);
    public void colorMode(int ydpug, float iofgh, float pzetj, float vftyn, float ixjkj);
    public void copy(int hsvpq, int rcyqe, int rbwej, int tdgom, int nesul, int sjxgg, int hbvgf, int tcbpz);
    public void copy(processing.core.PImage ssfmi, int fzoip, int jydaf, int srqhu, int nxltt, int jifru, int pnksc, int hkejr, int wingm);
    public void curveDetail(int rfdxm);
    public void curve(float nxtbk, float sryjw, float eyrqh, float jagjh, float xwmib, float iksse, float eklnd, float oxtcj);
    public void curve(float aeoav, float vkxsi, float mvvkl, float wnxom, float cbpjk, float ljyfl, float rdwjl, float oxlrn, float mqafh, float ypipx, float xtcre, float bzfos);
    public void curveTightness(float zuqtg);
    public void curveVertex(float rzlai, float cezfg);
    public void curveVertex(float ljlby, float yewjo, float zskjl);
    public void directionalLight(float ueqvd, float fxuqd, float gcawf, float szzce, float frttl, float pbijx);
    public void edge(boolean qwuyt);
    public void ellipse(float ldils, float mjtvu, float yfhxs, float naplu);
    public void ellipseMode(int bukak);
    public void emissive(float pnwvc);
    public void emissive(float pynkc, float ktqii, float vhjud);
    public void emissive(int pctnq);
    public void endCamera();
    public void endRaw();
    public void endShape();
    public void endShape(int oqgpg);
    public void fill(float madhw);
    public void fill(float rxuob, float jssrn);
    public void fill(float rmhpt, float qbzvw, float furys);
    public void fill(float bbrfb, float nmers, float ancnk, float tzvok);
    public void fill(int vtezw);
    public void fill(int rdsxm, float dxdsh);
    public void filter(int ugrpd);
    public void filter(int qqtkx, float jxjlz);
    public void flush();
    public void frustum(float ocphv, float gshvn, float qkkvg, float lzhwe, float ozviw, float baciv);
    public void hint(int hatya);
    public void imageMode(int crymu);
    public void image(processing.core.PImage jkcoe, float ndeyj, float yvyhy);
    public void image(processing.core.PImage cpgit, float oeuye, float anzhk, float bqjfx, float pgptx);
    public void image(processing.core.PImage vasbi, float xxoxk, float thdgr, float lnwyb, float ivpkc, int ebkzv, int jeghp, int haxsc, int yseuv);
    public void lightFalloff(float hnbcl, float bbyuw, float whfca);
    public void lights();
    public void lightSpecular(float czvbf, float ifcat, float nveae);
    public void line(float pmpdk, float jmnat, float xbgnn, float dhllz);
    public void line(float ytenc, float agsit, float hufss, float vmzaa, float mcvgb, float ebdpp);
    public void loadPixels();
    public void mask(int[] xjznz);
    public void mask(processing.core.PImage gwcev);
    public void noFill();
    public void noLights();
    public void normal(float sddbb, float pgflf, float qygbv);
    public void noSmooth();
    public void noStroke();
    public void noTint();
    public void ortho();
    public void ortho(float fmzyx, float auqch, float iowdi, float rlkqj, float axrbl, float reiwx);
    public void perspective();
    public void perspective(float jtgax, float rhivp, float teyaz, float rkrum);
    public void point(float tcjrj, float acffs);
    public void point(float ecqom, float typzm, float hmyvn);
    public void pointLight(float ecwlm, float zqmck, float sehqs, float tjlgl, float zadcw, float tccfi);
    public void popMatrix();
    public void popStyle();
    public void printCamera();
    public void printMatrix();
    public void printProjection();
    public void pushMatrix();
    public void pushStyle();
    public void quad(float vdhxu, float hssvh, float nmcnx, float tsytr, float fvdok, float hqkff, float kjffo, float fysiq);
    public void rect(float rtnco, float efwxg, float bqgtf, float txciq);
    public void rectMode(int nuriu);
    public void removeCache(java.lang.Object wwggf);
    public void resetMatrix();
    public void rotate(float vquly);
    public void rotate(float mpyvn, float rzesb, float bdqje, float ahdwk);
    public void rotateX(float inhdr);
    public void rotateY(float zaweh);
    public void rotateZ(float shfpi);
    public void save(java.lang.String rscfq);
    public void scale(float aphyn);
    public void scale(float bwtmi, float aawax);
    public void scale(float uhdgt, float syjqk, float cywpu);
    public void setCache(java.lang.Object xwukh, java.lang.Object vwzxx);
    public void set(int szphx, int ohmxo, int abajy);
    public void set(int gfzes, int vyhig, processing.core.PImage emdyt);
    public void setMatrix(processing.core.PMatrix jogmb);
    public void setMatrix(processing.core.PMatrix2D xalfp);
    public void setMatrix(processing.core.PMatrix3D msrsb);
    public void shapeMode(int kosds);
    public void shape(processing.core.PShape fmlwi);
    public void shape(processing.core.PShape uohis, float anyzk, float ksbss);
    public void shape(processing.core.PShape uegej, float vhlft, float ydgtn, float ekdjq, float rcywl);
    public void shininess(float gjutw);
    public void smooth();
    public void specular(float xcmgl);
    public void specular(float jpjeh, float xvqsx, float zxxuc);
    public void specular(int fxvxz);
    public void sphereDetail(int qddxl);
    public void sphereDetail(int bjwae, int whxdv);
    public void sphere(float fsyhz);
    public void spotLight(float gwhdh, float nveen, float vdkut, float kgoku, float sqgta, float magwo, float fljdm, float gucbz, float glrdr, float tmbfy, float cafxu);
    public void strokeCap(int favbt);
    public void stroke(float nfgkq);
    public void stroke(float idwuh, float gsfgh);
    public void stroke(float zrvah, float twixs, float cjpeo);
    public void stroke(float bvljx, float eqgfo, float ghojw, float rbkfl);
    public void stroke(int afbbo);
    public void stroke(int kwjaj, float jpnfa);
    public void strokeJoin(int ogkxw);
    public void strokeWeight(float vfswz);
    public void style(processing.core.PStyle xlyqv);
    public void textAlign(int kmdug);
    public void textAlign(int azekn, int tlbxm);
    public void text(char eswsp);
    public void text(char aqzpz, float qznlo, float lsnon);
    public void text(char dtjrw, float vnyti, float cxgfl, float nujyf);
    public void text(char[] ylxpo, int yvxhg, int wgyot, float nlwsl, float qspzp);
    public void text(char[] hulnb, int fajni, int ewhuq, float eqrsj, float cvldz, float tetxd);
    public void text(float hohov, float hwugm, float inyda);
    public void text(float xuyyy, float gudnj, float phjfh, float ebzic);
    public void textFont(processing.core.PFont cphom);
    public void textFont(processing.core.PFont bynjs, float hhzdw);
    public void text(int ipxzz, float gwbjy, float rsqom);
    public void text(int alygo, float vnehu, float yljjf, float vgiqt);
    public void text(java.lang.String cknzy);
    public void text(java.lang.String mhuif, float zjbmw, float etktg);
    public void text(java.lang.String ksisr, float tzmep, float eqorx, float neqta);
    public void text(java.lang.String lyvce, float jporq, float fbzmo, float doxvl, float snksq);
    public void text(java.lang.String mzkfw, float fiffo, float orktr, float worhq, float jxwug, float bihbj);
    public void textLeading(float rxmgj);
    public void textMode(int ozxuu);
    public void textSize(float tbbkt);
    public void textureMode(int slvea);
    public void texture(processing.core.PImage oeugw);
    public void tint(float cvqst);
    public void tint(float qpmll, float ajdwb);
    public void tint(float vhfpz, float jyfde, float fxifa);
    public void tint(float ajtln, float ktmuk, float kqutd, float aafll);
    public void tint(int uulyi);
    public void tint(int roxaz, float vusrs);
    public void translate(float xiusq, float fsthb);
    public void translate(float mvigv, float qmcjr, float kwnip);
    public void triangle(float lgqxw, float ovteo, float ixyst, float gcdjz, float cltrc, float ijzsk);
    public void updatePixels();
    public void updatePixels(int pecwt, int sreom, int onkri, int nywyj);
    public void vertex(float[] peceu);
    public void vertex(float xtuzs, float atunj);
    public void vertex(float ooxlt, float rwloz, float kmkhd);
    public void vertex(float vksbt, float zmnjo, float fkolq, float bgeee);
    public void vertex(float dkarl, float dppnh, float qntzh, float ufedk, float pbkqq);
}
