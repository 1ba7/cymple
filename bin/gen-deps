#!/usr/bin/env ruby
require 'fileutils'
require 'net/http'
require 'uri'
require 'yaml'

FileUtils.cd(File.dirname(__FILE__))
FileUtils.cd('../lib/')

=begin
http = begin
	uri = URI.parse(ENV['http_proxy'])
	Net::HTTP.Proxy(uri.host, uri.port, uri.user, uri.password)
rescue URI::InvalidURIError
	Net::HTTP
end

YAML.load_file('libs.yml').each do |dep|
	File.open(File.split(dep).last, 'w') do |file|
		file.write(http.get(URI.parse(dep)))
	end rescue next
	`jar -xf '#{File.split(dep).last}'`
end unless ARGV.include?('-s')
=end

def build(dir)
	cp = " -cp ../lib"
	FileUtils.mkdir_p("lib/cymple/#{dir}")
	FileUtils.cd('src')
	`javac#{cp} #{dir}/*.java`
	FileUtils.cd('..')
	`mv src/#{dir}/*.class lib/cymple/#{dir}/`
end

FileUtils.cd('..')
build('common')
build('data')
#`javac -cp lib src/Generate*.java -d tmp/`
build('toolkit')
`javac -cp lib src/Cymple.java -d lib/`
